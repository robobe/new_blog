{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>ROS</p> <p>Simulation</p> <p>Robotics</p> <p>Programming</p> <p>Embedded</p> <p>DevOps</p>"},{"location":"DevOps/","title":"Devops","text":"<p>Docker</p> <p>Linux</p> <p>Networking</p> <p>VSCode</p> <p>GIT</p> <p>TBD</p>"},{"location":"DevOps/docker/","title":"Docker","text":""},{"location":"DevOps/git/","title":"git","text":""},{"location":"DevOps/linux/","title":"Index","text":"<ul> <li>tmux / tmuxp config and usage</li> </ul>","tags":["linux"]},{"location":"DevOps/linux/linux_tmux_tmuxp/","title":"tmux","text":"","tags":["linux","tmux","tmuxp"]},{"location":"DevOps/linux/linux_tmux_tmuxp/#config","title":"Config","text":"<pre><code># unbind\nunbind C-b\nunbind '\"'\nunbind %\n\n# base1 numbering\nset -g base-index 1\nsetw -g pane-base-index 1\n\n#bind ctrl-a as a prefix\nset-option -g prefix C-a\nbind-key C-a send-prefix\n# kill session\nbind C-c kill-session\n\nbind C-a run \"tmux save-buffer - | xclip -i -sel clipboard\"\n\n# mouse\nset -g mouse on\n\n\n # do like terminator\nbind -n C-E split-window -h\nbind -n C-S-Left resize-pane -L 3\nbind -n C-S-Right resize-pane -R 3\nbind -n C-S-Up resize-pane -U 3\nbind -n C-S-Down resize-pane -D 3\nbind -n C-O split-window -v\n\n# switch panes using Alt-arrow without prefix (not working)\nbind -n M-Left select-pane -L\nbind -n M-Right select-pane -R\nbind -n M-Up select-pane -U\nbind -n M-Down select-pane -D\n\n# Shift arrow to switch windows\n\nbind n next-window\nbind p previous-window\n\nbind c new-window -c \"#{pane_current_path}\"\n\nbind r source-file ~/.tmux.conf\n\n# settings\n</code></pre>","tags":["linux","tmux","tmuxp"]},{"location":"DevOps/vscode/","title":"VSCode","text":"<p>Tips / Settings</p> <p>DevContainer</p> <p>Remote ssh</p>"},{"location":"DevOps/vscode/dev_container/","title":"VSCode Dev Container","text":"<ul> <li>Run DevContainer on remote host</li> </ul>"},{"location":"DevOps/vscode/dev_container/vscode_devcontainer_remote_host/","title":"Run dev container on remote host","text":"","tags":["vscode","devcontainer","remote"]},{"location":"DevOps/vscode/dev_container/vscode_devcontainer_remote_host/#prepared-host","title":"Prepared host","text":"","tags":["vscode","devcontainer","remote"]},{"location":"DevOps/vscode/dev_container/vscode_devcontainer_remote_host/#ssh-key","title":"SSH key","text":"<pre><code>ssh-keygen -t ed25519 -C \"dev@gmail.com\"\n</code></pre> <pre><code>ssh-copy-id &lt;user&gt;r@&lt;host&gt;\n</code></pre>","tags":["vscode","devcontainer","remote"]},{"location":"DevOps/vscode/dev_container/vscode_devcontainer_remote_host/#prepared-vscode","title":"Prepared VSCode","text":"<ul> <li>install <code>Remote - SSH</code> (ms-vscode-remote.remote-ssh) extension</li> <li>install <code>Dev Containers</code> (ms-vscode-remote.remote-containers) extension</li> </ul> <p>Set docker environment <code>.vscode/setting.json</code></p> <pre><code>{\n    \"docker.environment\": {\n        \"DOCKER_HOST\": \"ssh://user@10.0.0.4\"\n    }\n}\n</code></pre>","tags":["vscode","devcontainer","remote"]},{"location":"DevOps/vscode/dev_container/vscode_devcontainer_remote_host/#devcontainer","title":"Devcontainer","text":"<p>Note</p> <p>Create project folder on the remote machine in the same location like the local machine</p> <p>for example <pre><code>/home/user/projects/vscode_remote_devcontainer\n</code></pre></p> devcontainer.json<pre><code>{\n  \"name\": \"Remote DevContainer\",\n  \"workspaceFolder\": \"/workspaces/vscode_remote_devcontainer\",\n  \"build\": {\n    \"dockerfile\": \"Dockerfile\"\n  },\n  \"remoteUser\": \"user\",\n  \"runArgs\": [\"--network=host\"],\n  \"postCreateCommand\": \"echo 'DevContainer is ready!'\"\n}\n</code></pre>","tags":["vscode","devcontainer","remote"]},{"location":"DevOps/vscode/dev_container/vscode_devcontainer_remote_host/#dockerfile","title":"Dockerfile","text":"<p>Base on ubuntu 22.04 add none root user and install and config <code>sudo</code></p> <pre><code>FROM ubuntu:22.04\n\nARG DEBIAN_FRONTEND=noninteractive\n\nARG USERNAME=user\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Check if \"ubuntu\" user exists, delete it if it does, then create the desired user\nRUN if getent passwd ubuntu &gt; /dev/null 2&gt;&amp;1; then \\\n        userdel -r ubuntu &amp;&amp; \\\n        echo \"Deleted existing ubuntu user\"; \\\n    fi &amp;&amp; \\\n    groupadd --gid $USER_GID $USERNAME &amp;&amp; \\\n    useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME &amp;&amp; \\\n    echo \"Created new user $USERNAME\"\n\n# Add sudo support for the non-root user\nRUN apt-get update &amp;&amp; apt-get install -y sudo \\\n  &amp;&amp; echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL &gt; /etc/sudoers.d/$USERNAME\\\n  &amp;&amp; chmod 0440 /etc/sudoers.d/$USERNAME \\\n  &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n\n  ARG DEBIAN_FRONTEND=\n</code></pre>","tags":["vscode","devcontainer","remote"]},{"location":"DevOps/vscode/dev_container/vscode_devcontainer_remote_host/#run","title":"Run","text":"<p>Warning</p> <p>How to sync files from remote to local machine</p>","tags":["vscode","devcontainer","remote"]},{"location":"DevOps/vscode/remote_ssh/","title":"Remote ssh","text":"","tags":["vscode","remote","ssh"]},{"location":"DevOps/vscode/remote_ssh/#tips","title":"Tips","text":"","tags":["vscode","remote","ssh"]},{"location":"DevOps/vscode/remote_ssh/#add-x11-support","title":"Add x11 support","text":"<p>Add ForwardX11 and ForwardX11Trusted to user <code>.ssh/config</code> file</p> <pre><code>Host 10.0.0.4\n  HostName 10.0.0.4\n  User user\n  ForwardX11 yes\n  ForwardX11Trusted yes\n</code></pre>","tags":["vscode","remote","ssh"]},{"location":"DevOps/vscode/tips_settings/","title":"VSCode tips and settings","text":""},{"location":"DevOps/vscode/tips_settings/#keyboard-shortcuts","title":"keyboard shortcuts","text":""},{"location":"DevOps/vscode/tips_settings/#vscode-explorer","title":"VSCode explorer","text":"<p>Add <code>new file</code> and <code>new folder</code> keyboard shortcut in file explorer</p> <p>Add <code>key</code> to <code>keybindings.json</code> file <pre><code>{\n    \"key\": \"ctrl+n\",\n    \"command\": \"explorer.newFile\",\n    \"when\": \"explorerViewletFocus\"\n},\n{\n    \"key\": \"ctrl+shift+n\",\n    \"command\": \"explorer.newFolder\",\n    \"when\": \"explorerViewletFocus\"\n},\n</code></pre></p>"},{"location":"DevOps/vscode/tips_settings/#terminal","title":"Terminal","text":""},{"location":"DevOps/vscode/tips_settings/#run-script-when-terminal-open","title":"run script when terminal open","text":"<pre><code>\"terminal.integrated.profiles.linux\": {\n      \"bash\": {\n          \"path\": \"bash\",\n          \"icon\": \"terminal-bash\",\n          \"args\": [\"--rcfile\", \"&lt;project&gt;/env.sh\"]\n      }\n  }\n</code></pre> <ul> <li>rcfile: specify an alternative initialization file (RC file) to source when starting a new bash session</li> </ul>"},{"location":"Embedded/","title":"Embedded","text":"<p>Arduino</p> <p>ESP32</p> <p>Jetson</p> <p>RPi</p> <p>TBD</p> <p>TBD</p>"},{"location":"Other/","title":"Other","text":"<p>GStreamer</p> <p>Block 2 Description</p> <p>Block 3 Description</p> <p>Block 4 Description</p> <p>Block 5 Description</p> <p>Presentation</p>"},{"location":"Other/Gstreamer/","title":"GStreamer","text":"<ul> <li>Video stream pipes</li> </ul>"},{"location":"Other/Gstreamer/gst_stream_pipes/","title":"GStreamer video stream pipe","text":"","tags":["gst","gstreamer","streaming"]},{"location":"Other/Gstreamer/gst_stream_pipes/#h265-cpu-encoder","title":"H265 cpu encoder","text":"<pre><code>gst-launch-1.0 videotestsrc \\\n! video/x-raw, width=640, height=480, framerate=30/1, format=I420 \\\n! videoconvert \\\n! x265enc tune=zerolatency speed-preset=ultrafast key-int-max=30 bitrate=500 \\\n! rtph265pay config-interval=1 mtu=1400 \\\n! udpsink host=127.0.0.1 port=5000 sync=true\n</code></pre> property description more ... config-interval Send VPS, SPS and PPS Insertion Interval in seconds (default 0) help decoder to interpret video stream <pre><code>## receive\ngst-launch-1.0 udpsrc port=5000 \\\n! application/x-rtp, encoding-name=H265, payload=96 \\\n! rtpjitterbuffer latency=10 \\\n! rtph265depay \\\n! decodebin \\\n! fpsdisplaysink sync=true\n</code></pre>","tags":["gst","gstreamer","streaming"]},{"location":"Other/Presentation/","title":"Presentaions","text":"<p>ROS Application from development to deploy using docker and vscode</p> <p>Block 2 Description</p> <p>Block 3 Description</p>"},{"location":"Programming/","title":"Programing","text":"<p>Python</p> <p>C/CPP</p> <p>Web</p> <p>Block 4 Description</p> <p>Block 5 Description</p> <p>Block 6 Description</p>"},{"location":"Programming/python/","title":"Python","text":""},{"location":"ROS/","title":"ROS","text":"<p>Block 1 Description</p> <p>Block 2 Description</p> <p>Block 3 Description</p> <p>Block 4 Description</p> <p>Block 5 Description</p> <p>Block 6 Description</p>"},{"location":"Robotics/","title":"Robotics","text":"<p>sensors</p> <p>Block 2 Description</p> <p>Block 3 Description</p> <p>Block 4 Description</p> <p>Block 5 Description</p> <p>Block 6 Description</p>"},{"location":"Robotics/sensors/","title":"Sensors","text":"<p>imu</p> <p>Block 2 Description</p> <p>Block 3 Description</p> <p>Block 4 Description</p> <p>Block 5 Description</p> <p>Block 6 Description</p>"},{"location":"Robotics/sensors/imu/","title":"IMU","text":"","tags":["imu","robotics","sensors"]},{"location":"Robotics/sensors/imu/#to-read-and-watch","title":"To read and watch","text":"<ul> <li>madgwick_py: A Python implementation of Madgwick's IMU and AHRS algorithm.</li> <li>madgwick algorithm</li> <li>Kalman Filter for 6DOF IMU Implementation</li> </ul>","tags":["imu","robotics","sensors"]},{"location":"Simulation/","title":"Simulation","text":"<p>Gazebo Classic</p> <p>Gazebo Classic</p> <p>Block 3 Description</p> <p>Block 4 Description</p> <p>Block 5 Description</p> <p>Block 6 Description</p>"}]}